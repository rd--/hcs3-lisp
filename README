LISP SUPERCOLLIDER
------------------

AMERICAN PRIMITIVE, VOL. 2

`HSC3-LISP` is a simple
[LISP](http://www-formal.stanford.edu/jmc/history/lisp/lisp.html)
interpreter.

The only data type is the
[SUPERCOLLIDER](http://audiosynth.com/)
`UNIT GENERATOR`.

[WHY LISP SUPERCOLLIDER?](?t=hsc3-graphs&e=gr/jmcc/why-supercollider.scd)

~~~~
(HEAR
  (LET ((R (RESONZ (MUL (DUST AR 0.2) 50) (RAND 200 3200) 0.003))
        (S (MIX (CLONE 10 R)))
        (Z (DELAY-N S 0.048 0.048))
        (C (COMB-L Z 0.1 (MUL-ADD (LF-NOISE1 KR (RAND 0 0.1)) 0.04 0.05) 15))
        (Y (MIX (CLONE 7 C)))
        (F (LAMBDA (I) (ALLPASS-N I 0.05 (CLONE 2 (RAND 0 0.05)) 1)))
        (X ((FOLDL1 COMPOSE (REPLICATE 4 F)) Y)))
    (ADD S (MUL X 0.2))))
~~~~

There is an OSX (10.9.3) binary
([hsc3-lisp](sw/hsc3-lisp/osx/hsc3-lisp.xz).[xz](http://tukaani.org/xz/)),
or to build type:

~~~~
cd ~/sw/hsc3-lisp/hs ; prefix=~/opt make install
~~~~

An environment variable locates the HSC3-LISP library files:

~~~~
export HSC3_LISP_DIR=$HOME/sw/hsc3-lisp/lisp
~~~~

To hear the above type `C-cC-e` in
[EMACS](http://www.gnu.org/software/emacs/),
or in a shell type:

~~~~
hsc3-lisp ~/sw/rsc3/help/graph/why-supercollider.lisp
~~~~

There is a [TUTORIAL](?t=hsc3-lisp&e=help/tutorial.lisp),
and [TRANSLATIONS](?t=hsc3-lisp&e=help/jmcc.lisp) of graphs by [JAMES
MCCARTNEY](http://audiosynth.com/autobio/emu.jpg) from the `SC2`
manual.

HSC3-LISP is `CASE-INSENSITIVE`, in EMACS you can type `C-x C-l` to
time travel.

HSC3-LISP follows the
[HASKELL](http://haskell.org/)
supercollider
([HSC3](http://rohandrape.net/?t=hsc3))
rules.

HSC3-LISP thinks `scsynth` is listening at the standard port (57110).

HSC3-LISP is POST-[ML](http://standardml.org), `(EQUAL? (MAP (+ 1) (LIST 1 2 3)) (LIST 2 3 4))`.

HSC3-LISP is not [SCHEME](http://library.readscheme.org/standards.html).
Still, the following [RSC3](http://rohandrape.net/?t=rsc3) graphs are working:

- [aleatoric-quartet.lisp](?t=rsc3&e=help/graph/aleatoric-quartet.lisp)
- [alien-froggies.lisp](?t=rsc3&e=help/graph/alien-froggies.lisp)
- [alien-meadow.lisp](?t=rsc3&e=help/graph/alien-meadow.lisp)
- [analog-bubbles.lisp](?t=rsc3&e=help/graph/analog-bubbles.lisp)
- [analog-bubbles-mouse.lisp](?t=rsc3&e=help/graph/analog-bubbles-mouse.lisp)
- [analogue-daze.lisp](?t=rsc3&e=help/graph/analogue-daze.lisp)
- [babbling-brook.lisp](?t=rsc3&e=help/graph/babbling-brook.lisp)
- [berlin-1977.lisp](?t=rsc3&e=help/graph/berlin-1977.lisp)
- [bit-reduction.lisp](?t=rsc3&e=help/graph/bit-reduction.lisp)
- [blips-001.lisp](?t=rsc3&e=help/graph/blips-001.lisp)
- [bottle.lisp](?t=rsc3&e=help/graph/bottle.lisp)
- [bouncing-objects.lisp](?t=rsc3&e=help/graph/bouncing-objects.lisp)
- [bowed-string.lisp](?t=rsc3&e=help/graph/bowed-string.lisp)
- [ccomb.lisp](?t=rsc3&e=help/graph/ccomb.lisp)
- [chain-saw.lisp](?t=rsc3&e=help/graph/chain-saw.lisp)
- [choip.lisp](?t=rsc3&e=help/graph/choip.lisp)
- [chrd.lisp](?t=rsc3&e=help/graph/chrd.lisp)
- [clustered-sines.lisp](?t=rsc3&e=help/graph/clustered-sines.lisp)
- [coolant.lisp](?t=rsc3&e=help/graph/coolant.lisp)
- [cricket.lisp](?t=rsc3&e=help/graph/cricket.lisp)
- [crotale.lisp](?t=rsc3&e=help/graph/crotale.lisp)
- [cut-outs.lisp](?t=rsc3&e=help/graph/cut-outs.lisp)
- [cymbalism-accelerando.lisp](?t=rsc3&e=help/graph/cymbalism-accelerando.lisp)
- [cymbalism.lisp](?t=rsc3&e=help/graph/cymbalism.lisp)
- [data-space.lisp](?t=rsc3&e=help/graph/data-space.lisp)
- [deep-sea.lisp](?t=rsc3&e=help/graph/deep-sea.lisp)
- [demanding-studies.lisp](?t=rsc3&e=help/graph/demanding-studies.lisp)
- [dial-history.lisp](?t=rsc3&e=help/graph/dial-history.lisp)
- [diffraction.lisp](?t=rsc3&e=help/graph/diffraction.lisp)
- [discretion.lisp](?t=rsc3&e=help/graph/discretion.lisp)
- [doppler.lisp](?t=rsc3&e=help/graph/doppler.lisp)
- [drummer.lisp](?t=rsc3&e=help/graph/drummer.lisp)
- [eggcrate.lisp](?t=rsc3&e=help/graph/eggcrate.lisp)
- [f-lets.lisp](?t=rsc3&e=help/graph/f-lets.lisp)
- [fm-iter.lisp](?t=rsc3&e=help/graph/fm-iter.lisp)
- [forest-sounds.lisp](?t=rsc3&e=help/graph/forest-sounds.lisp)
- [fwalk.lisp](?t=rsc3&e=help/graph/fwalk.lisp)
- [half-life.lisp](?t=rsc3&e=help/graph/half-life.lisp)
- [hard-sync-sawtooth-with-lfo.lisp](?t=rsc3&e=help/graph/hard-sync-sawtooth-with-lfo.lisp)
- [harmonic-swimming.lisp](?t=rsc3&e=help/graph/harmonic-swimming.lisp)
- [harmonic-tumbling.lisp](?t=rsc3&e=help/graph/harmonic-tumbling.lisp)
- [h-chatter.lisp](?t=rsc3&e=help/graph/h-chatter.lisp)
- [hell-is-busy.lisp](?t=rsc3&e=help/graph/hell-is-busy.lisp)
- [hh-808.lisp](?t=rsc3&e=help/graph/hh-808.lisp)
- [implosion.lisp](?t=rsc3&e=help/graph/implosion.lisp)
- [impulse-sequencer.lisp](?t=rsc3&e=help/graph/impulse-sequencer.lisp)
- [karplus-strong.lisp](?t=rsc3&e=help/graph/karplus-strong.lisp)
- [klink.lisp](?t=rsc3&e=help/graph/klink.lisp)
- [k-ppr.lisp](?t=rsc3&e=help/graph/k-ppr.lisp)
- [lfo-modulation.lisp](?t=rsc3&e=help/graph/lfo-modulation.lisp)
- [lf-pulses.lisp](?t=rsc3&e=help/graph/lf-pulses.lisp)
- [lg-timed.lisp](?t=rsc3&e=help/graph/lg-timed.lisp)
- [lots-o-sines.lisp](?t=rsc3&e=help/graph/lots-o-sines.lisp)
- [lz-bf.lisp](?t=rsc3&e=help/graph/lz-bf.lisp)
- [modal-space-buf.lisp](?t=rsc3&e=help/graph/modal-space-buf.lisp)
- [modal-space.lisp](?t=rsc3&e=help/graph/modal-space.lisp)
- [moto-rev.lisp](?t=rsc3&e=help/graph/moto-rev.lisp)
- [mouse-clatter.lisp](?t=rsc3&e=help/graph/mouse-clatter.lisp)
- [narrow-band-filtered-crackle-noise.lisp](?t=rsc3&e=help/graph/narrow-band-filtered-crackle-noise.lisp)
- [nharm.lisp](?t=rsc3&e=help/graph/nharm.lisp)
- [noise-burst-sweep.lisp](?t=rsc3&e=help/graph/noise-burst-sweep.lisp)
- [one-line.lisp](?t=rsc3&e=help/graph/one-line.lisp)
- [oscillator-cluster.lisp](?t=rsc3&e=help/graph/oscillator-cluster.lisp)
- [pattern-buffer.lisp](?t=rsc3&e=help/graph/pattern-buffer.lisp)
- [plucked-strings.lisp](?t=rsc3&e=help/graph/plucked-strings.lisp)
- [police-state.lisp](?t=rsc3&e=help/graph/police-state.lisp)
- [pond-life.lisp](?t=rsc3&e=help/graph/pond-life.lisp)
- [pulsing-bottles.lisp](?t=rsc3&e=help/graph/pulsing-bottles.lisp)
- [rails.lisp](?t=rsc3&e=help/graph/rails.lisp)
- [random-pulsations.lisp](?t=rsc3&e=help/graph/random-pulsations.lisp)
- [random-sine-waves.lisp](?t=rsc3&e=help/graph/random-sine-waves.lisp)
- [record-scratcher.lisp](?t=rsc3&e=help/graph/record-scratcher.lisp)
- [red-frik.lisp](?t=rsc3&e=help/graph/red-frik.lisp)
- [reset.lisp](?t=rsc3&e=help/graph/reset.lisp)
- [resonant-dust.lisp](?t=rsc3&e=help/graph/resonant-dust.lisp)
- [resonators-harmonic-series.lisp](?t=rsc3&e=help/graph/resonators-harmonic-series.lisp)
- [reso-pulse.lisp](?t=rsc3&e=help/graph/reso-pulse.lisp)
- [reverberated-noise-bursts.lisp](?t=rsc3&e=help/graph/reverberated-noise-bursts.lisp)
- [reverberated-sine-percussion.lisp](?t=rsc3&e=help/graph/reverberated-sine-percussion.lisp)
- [ring-modulated-klank.lisp](?t=rsc3&e=help/graph/ring-modulated-klank.lisp)
- [rzblp.lisp](?t=rsc3&e=help/graph/rzblp.lisp)
- [sample-and-hold-liquidities.lisp](?t=rsc3&e=help/graph/sample-and-hold-liquidities.lisp)
- [s-chirp.lisp](?t=rsc3&e=help/graph/s-chirp.lisp)
- [scratchy.lisp](?t=rsc3&e=help/graph/scratchy.lisp)
- [scritto.lisp](?t=rsc3&e=help/graph/scritto.lisp)
- [seqr.lisp](?t=rsc3&e=help/graph/seqr.lisp)
- [shepard-tones.lisp](?t=rsc3&e=help/graph/shepard-tones.lisp)
- [shifting-pulses.lisp](?t=rsc3&e=help/graph/shifting-pulses.lisp)
- [slly-wlk.lisp](?t=rsc3&e=help/graph/slly-wlk.lisp)
- [snare-909.lisp](?t=rsc3&e=help/graph/snare-909.lisp)
- [sosc-lp.lisp](?t=rsc3&e=help/graph/sosc-lp.lisp)
- [spe.lisp](?t=rsc3&e=help/graph/spe.lisp)
- [sprinkler.lisp](?t=rsc3&e=help/graph/sprinkler.lisp)
- [sprinkler-mouse.lisp](?t=rsc3&e=help/graph/sprinkler-mouse.lisp)
- [status.lisp](?t=rsc3&e=help/graph/status.lisp)
- [strtchd-scrmbld.lisp](?t=rsc3&e=help/graph/strtchd-scrmbld.lisp)
- [strummable-guitar.lisp](?t=rsc3&e=help/graph/strummable-guitar.lisp)
- [sweepy-noise.lisp](?t=rsc3&e=help/graph/sweepy-noise.lisp)
- [swept-resonant-noise.lisp](?t=rsc3&e=help/graph/swept-resonant-noise.lisp)
- [synthetic-piano.lisp](?t=rsc3&e=help/graph/synthetic-piano.lisp)
- [tank.lisp](?t=rsc3&e=help/graph/tank.lisp)
- [tgb.lisp](?t=rsc3&e=help/graph/tgb.lisp)
- [tgr-rpr.lisp](?t=rsc3&e=help/graph/tgr-rpr.lisp)
- [theremin.lisp](?t=rsc3&e=help/graph/theremin.lisp)
- [three-cpsw.lisp](?t=rsc3&e=help/graph/three-cpsw.lisp)
- [tipnso.lisp](?t=rsc3&e=help/graph/tipnso.lisp)
- [tremulate.lisp](?t=rsc3&e=help/graph/tremulate.lisp)
- [trkl.lisp](?t=rsc3&e=help/graph/trkl.lisp)
- [trmlo.lisp](?t=rsc3&e=help/graph/trmlo.lisp)
- [tr-out.lisp](?t=rsc3&e=help/graph/tr-out.lisp)
- [tsort.lisp](?t=rsc3&e=help/graph/tsort.lisp)
- [uplink.lisp](?t=rsc3&e=help/graph/uplink.lisp)
- [voscil.lisp](?t=rsc3&e=help/graph/voscil.lisp)
- [what-was-i-thinking.lisp](?t=rsc3&e=help/graph/what-was-i-thinking.lisp)
- [why-supercollider.lisp](?t=rsc3&e=help/graph/why-supercollider.lisp)
- [wial.lisp](?t=rsc3&e=help/graph/wial.lisp)
- [wind-metals.lisp](?t=rsc3&e=help/graph/wind-metals.lisp)
- [xy-interference.lisp](?t=rsc3&e=help/graph/xy-interference.lisp)
- [zizle.lisp](?t=rsc3&e=help/graph/zizle.lisp)

There is as HS-TO-LISP translator (October, 2014) that re-writes a
[subset](?t=hsc3-lisp&e=md/sexp.md) of haskell as LISP.

## LISP

- [hsc3.lisp](?t=hsc3-lisp&e=lisp/hsc3.lisp)
- [rhs.lisp](?t=hsc3-lisp&e=lisp/rhs.lisp)
- [rhs.syntax.lisp](?t=hsc3-lisp&e=lisp/rhs.syntax.lisp)
- [rsc3.lisp](?t=hsc3-lisp&e=lisp/rsc3.lisp)
- [scheme.lisp](?t=hsc3-lisp&e=lisp/scheme.lisp)
- [stdlib.lisp](?t=hsc3-lisp&e=lisp/stdlib.lisp)
- [ugen.lisp](?t=hsc3-lisp&e=lisp/ugen.lisp)

## HELP

- [jmcc.lisp](?t=hsc3-lisp&e=help/jmcc.lisp)
- [tutorial.lisp](?t=hsc3-lisp&e=help/tutorial.lisp)
- [r5rs.lisp](?t=hsc3-lisp&e=help/r5rs.lisp)

initial announcement:
[[haskell-art](http://lurk.org/groups/haskell-art/messages/topic/5i1PSjCHQvVQwcAcLhUaE6/),
 [local](?t=hsc3-lisp&e=help/announce.text)]
2014-10-15 05:10:19 GMT

<!--
[bham](http://www.listarc.bham.ac.uk/lists/sc-users/msg42056.html)
[gmane](http://article.gmane.org/gmane.comp.lang.haskell.art/1026)
-->

© [rohan drape](http://rohandrape.net/), 2014-2020, [gpl](http://gnu.org/copyleft/).
