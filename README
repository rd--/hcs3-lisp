LISP SUPERCOLLIDER
------------------

<!-- AMERICAN PRIMITIVE, VOL. 2 -->

`hsc3-lisp` is a simple
[Lisp](http://www-formal.stanford.edu/jmc/history/lisp/lisp.html)
interpreter.

The only data type is the
[SuperCollider](http://audiosynth.com/)
`Unit Generator`.

[Why](?t=hsc3-graphs&e=gr/jmcc/why-supercollider.scd) Lisp SuperCollider?

~~~~
(hear
  (let ((r (resonz (mul (dust ar 0.2) 50) (rand 200 3200) 0.003))
        (s (mix (clone 10 r)))
        (z (delay-n s 0.048 0.048))
        (c (comb-l z 0.1 (mul-add (lf-noise1 kr (rand 0 0.1)) 0.04 0.05) 15))
        (y (mix (clone 7 c)))
        (f (lambda (i) (allpass-n i 0.05 (clone 2 (rand 0 0.05)) 1)))
        (x ((foldl1 compose (replicate 4 f)) y)))
    (add s (mul x 0.2))))
~~~~

There is an OSX (10.9.3) binary
([hsc3-lisp](sw/hsc3-lisp/osx/hsc3-lisp.xz).[xz](http://tukaani.org/xz/)),
or to build type:

~~~~
(cd ~/sw/hsc3-lisp ; cabal v1-install ; cd cmd ; prefix=~/opt make install)
~~~~

An environment variable locates the hsc3-lisp library files:

~~~~
export HSC3_LISP_DIR=$HOME/sw/hsc3-lisp/lisp
~~~~

To hear the above type `C-cC-e` in
[Emacs](http://www.gnu.org/software/emacs/),
or in a shell type:

~~~~
hsc3-lisp ~/sw/rsc3/help/graph/why-supercollider.lisp
~~~~

There is a [tutorial](?t=hsc3-lisp&e=help/tutorial.lisp),
and [translations](?t=hsc3-lisp&e=help/jmcc.lisp) of graphs by [James
McCartney](http://audiosynth.com/autobio/emu.jpg) from the `SC2`
manual.

hsc3-lisp is `case-insensitive`.

<!-- In emacs you can type `C-x C-l` to time travel. -->

hsc3-lisp follows the
[Haskell](http://haskell.org/)
SuperCollider
([hsc3](http://rohandrape.net/?t=hsc3))
rules.

hsc3-lisp thinks `scsynth` is listening at the standard port (57110).

hsc3-lisp is Post-[ML](http://standardml.org), ie.

    > (equal? (map (+ 1) (list 1 2 3)) (list 2 3 4))
    RESULT: 1

hsc3-lisp is not [scheme](http://library.readscheme.org/standards.html).
Still, the following [rsc3](http://rohandrape.net/?t=rsc3) graphs are working:

- [adc-bit-reduction.lisp](?t=rsc3&e=help/graph/adc-bit-reduction.lisp)
- [adc-down-sample.lisp](?t=rsc3&e=help/graph/adc-down-sample.lisp)
- [cr-lucier.lisp](?t=rsc3&e=help/graph/cr-lucier.lisp)
- [jmcc-aleatoric-quartet.lisp](?t=rsc3&e=help/graph/jmcc-aleatoric-quartet.lisp)
- [jmcc-analog-bubbles.lisp](?t=rsc3&e=help/graph/jmcc-analog-bubbles.lisp)
- [jmcc-analog-bubbles-mouse.lisp](?t=rsc3&e=help/graph/jmcc-analog-bubbles-mouse.lisp)
- [jmcc-analogue-daze.lisp](?t=rsc3&e=help/graph/jmcc-analogue-daze.lisp)
- [jmcc-babbling-brook.lisp](?t=rsc3&e=help/graph/jmcc-babbling-brook.lisp)
- [jmcc-berlin-1977.lisp](?t=rsc3&e=help/graph/jmcc-berlin-1977.lisp)
- [jmcc-clustered-sines.lisp](?t=rsc3&e=help/graph/jmcc-clustered-sines.lisp)
- [jmcc-coolant.lisp](?t=rsc3&e=help/graph/jmcc-coolant.lisp)
- [jmcc-data-space.lisp](?t=rsc3&e=help/graph/jmcc-data-space.lisp)
- [jmcc-deep-trip.lisp](?t=rsc3&e=help/graph/jmcc-deep-trip.lisp)
- [jmcc-demanding-studies.lisp](?t=rsc3&e=help/graph/jmcc-demanding-studies.lisp)
- [jmcc-doppler.lisp](?t=rsc3&e=help/graph/jmcc-doppler.lisp)
- [jmcc-harmonic-swimming.lisp](?t=rsc3&e=help/graph/jmcc-harmonic-swimming.lisp)
- [jmcc-harmonic-tumbling.lisp](?t=rsc3&e=help/graph/jmcc-harmonic-tumbling.lisp)
- [jmcc-impulse-sequencer.lisp](?t=rsc3&e=help/graph/jmcc-impulse-sequencer.lisp)
- [jmcc-landon-rose.lisp](?t=rsc3&e=help/graph/jmcc-landon-rose.lisp)
- [jmcc-lfo-modulation.lisp](?t=rsc3&e=help/graph/jmcc-lfo-modulation.lisp)
- [jmcc-modal-space.lisp](?t=rsc3&e=help/graph/jmcc-modal-space.lisp)
- [jmcc-moto-rev.lisp](?t=rsc3&e=help/graph/jmcc-moto-rev.lisp)
- [jmcc-mridangam.lisp](?t=rsc3&e=help/graph/jmcc-mridangam.lisp)
- [jmcc-noise-burst-sweep.lisp](?t=rsc3&e=help/graph/jmcc-noise-burst-sweep.lisp)
- [jmcc-plucked-strings.lisp](?t=rsc3&e=help/graph/jmcc-plucked-strings.lisp)
- [jmcc-police-state.lisp](?t=rsc3&e=help/graph/jmcc-police-state.lisp)
- [jmcc-pulsing-bottles.lisp](?t=rsc3&e=help/graph/jmcc-pulsing-bottles.lisp)
- [jmcc-random-panning-sines.lisp](?t=rsc3&e=help/graph/jmcc-random-panning-sines.lisp)
- [jmcc-random-pulsations.lisp](?t=rsc3&e=help/graph/jmcc-random-pulsations.lisp)
- [jmcc-resonant-dust.lisp](?t=rsc3&e=help/graph/jmcc-resonant-dust.lisp)
- [jmcc-reverberated-noise-bursts.lisp](?t=rsc3&e=help/graph/jmcc-reverberated-noise-bursts.lisp)
- [jmcc-reverberated-sine-percussion.lisp](?t=rsc3&e=help/graph/jmcc-reverberated-sine-percussion.lisp)
- [jmcc-sample-and-hold-liquidities.lisp](?t=rsc3&e=help/graph/jmcc-sample-and-hold-liquidities.lisp)
- [jmcc-saucer-base.lisp](?t=rsc3&e=help/graph/jmcc-saucer-base.lisp)
- [jmcc-scratchy.lisp](?t=rsc3&e=help/graph/jmcc-scratchy.lisp)
- [jmcc-snare-909.lisp](?t=rsc3&e=help/graph/jmcc-snare-909.lisp)
- [jmcc-spe.lisp](?t=rsc3&e=help/graph/jmcc-spe.lisp)
- [jmcc-sprinkler.lisp](?t=rsc3&e=help/graph/jmcc-sprinkler.lisp)
- [jmcc-sprinkler-mouse.lisp](?t=rsc3&e=help/graph/jmcc-sprinkler-mouse.lisp)
- [jmcc-strummable-guitar.lisp](?t=rsc3&e=help/graph/jmcc-strummable-guitar.lisp)
- [jmcc-sweepy-noise.lisp](?t=rsc3&e=help/graph/jmcc-sweepy-noise.lisp)
- [jmcc-synthetic-piano.lisp](?t=rsc3&e=help/graph/jmcc-synthetic-piano.lisp)
- [jmcc-tank.lisp](?t=rsc3&e=help/graph/jmcc-tank.lisp)
- [jmcc-theremin.lisp](?t=rsc3&e=help/graph/jmcc-theremin.lisp)
- [jmcc-what-was-i-thinking.lisp](?t=rsc3&e=help/graph/jmcc-what-was-i-thinking.lisp)
- [jmcc-why-supercollider.lisp](?t=rsc3&e=help/graph/jmcc-why-supercollider.lisp)
- [jmcc-zizle.lisp](?t=rsc3&e=help/graph/jmcc-zizle.lisp)
- [jrhb-deep-sea.lisp](?t=rsc3&e=help/graph/jrhb-deep-sea.lisp)
- [jrhb-dial-history.lisp](?t=rsc3&e=help/graph/jrhb-dial-history.lisp)
- [jrhb-half-life.lisp](?t=rsc3&e=help/graph/jrhb-half-life.lisp)
- [lp-one-line.lisp](?t=rsc3&e=help/graph/lp-one-line.lisp)
- [pj-forest-sounds.lisp](?t=rsc3&e=help/graph/pj-forest-sounds.lisp)
- [rb-hh-808.lisp](?t=rsc3&e=help/graph/rb-hh-808.lisp)
- [rd-ccomb.lisp](?t=rsc3&e=help/graph/rd-ccomb.lisp)
- [rd-chrd.lisp](?t=rsc3&e=help/graph/rd-chrd.lisp)
- [rd-cricket.lisp](?t=rsc3&e=help/graph/rd-cricket.lisp)
- [rd-crotale.lisp](?t=rsc3&e=help/graph/rd-crotale.lisp)
- [rd-cut-outs.lisp](?t=rsc3&e=help/graph/rd-cut-outs.lisp)
- [rd-diffraction.lisp](?t=rsc3&e=help/graph/rd-diffraction.lisp)
- [rd-discretion.lisp](?t=rsc3&e=help/graph/rd-discretion.lisp)
- [rd-eggcrate.lisp](?t=rsc3&e=help/graph/rd-eggcrate.lisp)
- [rd-f-lets.lisp](?t=rsc3&e=help/graph/rd-f-lets.lisp)
- [rd-fm-iter.lisp](?t=rsc3&e=help/graph/rd-fm-iter.lisp)
- [rd-fwalk.lisp](?t=rsc3&e=help/graph/rd-fwalk.lisp)
- [rd-h-chatter.lisp](?t=rsc3&e=help/graph/rd-h-chatter.lisp)
- [rd-implosion.lisp](?t=rsc3&e=help/graph/rd-implosion.lisp)
- [rd-klink.lisp](?t=rsc3&e=help/graph/rd-klink.lisp)
- [rd-k-ppr.lisp](?t=rsc3&e=help/graph/rd-k-ppr.lisp)
- [rd-lf-pulses.lisp](?t=rsc3&e=help/graph/rd-lf-pulses.lisp)
- [rd-lg-timed.lisp](?t=rsc3&e=help/graph/rd-lg-timed.lisp)
- [rd-mouse-clatter.lisp](?t=rsc3&e=help/graph/rd-mouse-clatter.lisp)
- [rd-oscillator-cluster.lisp](?t=rsc3&e=help/graph/rd-oscillator-cluster.lisp)
- [rd-prts.lisp](?t=rsc3&e=help/graph/rd-prts.lisp)
- [rd-rzblp.lisp](?t=rsc3&e=help/graph/rd-rzblp.lisp)
- [rd-s-chirp.lisp](?t=rsc3&e=help/graph/rd-s-chirp.lisp)
- [rd-shifting-pulses.lisp](?t=rsc3&e=help/graph/rd-shifting-pulses.lisp)
- [rd-slly-wlk.lisp](?t=rsc3&e=help/graph/rd-slly-wlk.lisp)
- [rd-three-cpsw.lisp](?t=rsc3&e=help/graph/rd-three-cpsw.lisp)
- [rd-tipnso.lisp](?t=rsc3&e=help/graph/rd-tipnso.lisp)
- [rd-trmlo.lisp](?t=rsc3&e=help/graph/rd-trmlo.lisp)
- [rd-wial.lisp](?t=rsc3&e=help/graph/rd-wial.lisp)
- [rd-xy-interference.lisp](?t=rsc3&e=help/graph/rd-xy-interference.lisp)

<!--
- [alien-froggies.lisp](?t=rsc3&e=help/graph/alien-froggies.lisp)
- [alien-meadow.lisp](?t=rsc3&e=help/graph/alien-meadow.lisp)
- [blips-001.lisp](?t=rsc3&e=help/graph/blips-001.lisp)
- [bottle.lisp](?t=rsc3&e=help/graph/bottle.lisp)
- [bouncing-objects.lisp](?t=rsc3&e=help/graph/bouncing-objects.lisp)
- [bowed-string.lisp](?t=rsc3&e=help/graph/bowed-string.lisp)
- [chain-saw.lisp](?t=rsc3&e=help/graph/chain-saw.lisp)
- [choip.lisp](?t=rsc3&e=help/graph/choip.lisp)
- [cymbalism-accelerando.lisp](?t=rsc3&e=help/graph/cymbalism-accelerando.lisp)
- [cymbalism.lisp](?t=rsc3&e=help/graph/cymbalism.lisp)
- [drummer.lisp](?t=rsc3&e=help/graph/drummer.lisp)
- [hard-sync-sawtooth-with-lfo.lisp](?t=rsc3&e=help/graph/hard-sync-sawtooth-with-lfo.lisp)
- [hell-is-busy.lisp](?t=rsc3&e=help/graph/hell-is-busy.lisp)
- [karplus-strong.lisp](?t=rsc3&e=help/graph/karplus-strong.lisp)
- [lots-o-sines.lisp](?t=rsc3&e=help/graph/lots-o-sines.lisp)
- [lz-bf.lisp](?t=rsc3&e=help/graph/lz-bf.lisp)
- [narrow-band-filtered-crackle-noise.lisp](?t=rsc3&e=help/graph/narrow-band-filtered-crackle-noise.lisp)
- [nharm.lisp](?t=rsc3&e=help/graph/nharm.lisp)
- [pattern-buffer.lisp](?t=rsc3&e=help/graph/pattern-buffer.lisp)
- [pond-life.lisp](?t=rsc3&e=help/graph/pond-life.lisp)
- [rails.lisp](?t=rsc3&e=help/graph/rails.lisp)
- [random-sine-waves.lisp](?t=rsc3&e=help/graph/random-sine-waves.lisp)
- [record-scratcher.lisp](?t=rsc3&e=help/graph/record-scratcher.lisp)
- [red-frik.lisp](?t=rsc3&e=help/graph/red-frik.lisp)
- [reset.lisp](?t=rsc3&e=help/graph/reset.lisp)
- [resonators-harmonic-series.lisp](?t=rsc3&e=help/graph/resonators-harmonic-series.lisp)
- [reso-pulse.lisp](?t=rsc3&e=help/graph/reso-pulse.lisp)
- [ring-modulated-klank.lisp](?t=rsc3&e=help/graph/ring-modulated-klank.lisp)
- [scritto.lisp](?t=rsc3&e=help/graph/scritto.lisp)
- [seqr.lisp](?t=rsc3&e=help/graph/seqr.lisp)
- [shepard-tones.lisp](?t=rsc3&e=help/graph/shepard-tones.lisp)
- [sosc-lp.lisp](?t=rsc3&e=help/graph/sosc-lp.lisp)
- [status.lisp](?t=rsc3&e=help/graph/status.lisp)
- [strtchd-scrmbld.lisp](?t=rsc3&e=help/graph/strtchd-scrmbld.lisp)
- [swept-resonant-noise.lisp](?t=rsc3&e=help/graph/swept-resonant-noise.lisp)
- [tgb.lisp](?t=rsc3&e=help/graph/tgb.lisp)
- [tgr-rpr.lisp](?t=rsc3&e=help/graph/tgr-rpr.lisp)
- [tremulate.lisp](?t=rsc3&e=help/graph/tremulate.lisp)
- [trkl.lisp](?t=rsc3&e=help/graph/trkl.lisp)
- [tr-out.lisp](?t=rsc3&e=help/graph/tr-out.lisp)
- [tsort.lisp](?t=rsc3&e=help/graph/tsort.lisp)
- [uplink.lisp](?t=rsc3&e=help/graph/uplink.lisp)
- [voscil.lisp](?t=rsc3&e=help/graph/voscil.lisp)
- [wind-metals.lisp](?t=rsc3&e=help/graph/wind-metals.lisp)
-->

There is also an haskell to lisp translator (October, 2014) that re-writes a
[subset](?t=hsc3-lisp&e=md/hs-to-sexp.md) of haskell as lisp.

## LISP

- [hsc3.lisp](?t=hsc3-lisp&e=lisp/hsc3.lisp)
- [rhs.lisp](?t=hsc3-lisp&e=lisp/rhs.lisp)
- [rhs.syntax.lisp](?t=hsc3-lisp&e=lisp/rhs.syntax.lisp)
- [rsc3.lisp](?t=hsc3-lisp&e=lisp/rsc3.lisp)
- [scheme.lisp](?t=hsc3-lisp&e=lisp/scheme.lisp)
- [stdlib.lisp](?t=hsc3-lisp&e=lisp/stdlib.lisp)
- [ugen.lisp](?t=hsc3-lisp&e=lisp/ugen.lisp)

## HELP

- [jmcc.lisp](?t=hsc3-lisp&e=help/jmcc.lisp)
- [tutorial.lisp](?t=hsc3-lisp&e=help/tutorial.lisp)
- [r5rs.lisp](?t=hsc3-lisp&e=help/r5rs.lisp)

initial announcement:
[[haskell-art](http://lurk.org/groups/haskell-art/messages/topic/5i1PSjCHQvVQwcAcLhUaE6/),
 [local](?t=hsc3-lisp&e=help/announce.text)]
2014-10-15 05:10:19 GMT

<!--
[bham](http://www.listarc.bham.ac.uk/lists/sc-users/msg42056.html)
[gmane](http://article.gmane.org/gmane.comp.lang.haskell.art/1026)
-->

© [rohan drape](http://rohandrape.net/), 2014-2021, [gpl](http://gnu.org/copyleft/).
