LISP SUPERCOLLIDER
------------------

AMERICAN PRIMITIVE, VOL. 2

`HSC3-LISP` is a simple [LISP][lisp] interpreter.

The only data type is the [SUPERCOLLIDER][sc3] `UNIT GENERATOR`.

A LISP answer to the eternal question,
[WHY SUPERCOLLIDER?](sw/hsc3-graphs/html/why-supercollider.scd.html)

~~~~
(HEAR
  (LET ((R (RESONZ (MUL (DUST AR 0.2) 50) (RAND 200 3200) 0.003))
        (S (MIX (CLONE 10 R)))
        (Z (DELAY-N S 0.048 0.048))
        (C (COMB-L Z 0.1 (MUL-ADD (LF-NOISE1 KR (RAND 0 0.1)) 0.04 0.05) 15))
        (Y (MIX (CLONE 7 C)))
        (F (LAMBDA (I) (ALLPASS-N I 0.05 (CLONE 2 (RAND 0 0.05)) 1)))
        (X ((FOLDL1 COMPOSE (REPLICATE 4 F)) Y)))
    (ADD S (MUL X 0.2))))
~~~~

To build type:

~~~~
cd hs ; prefix=~/opt make install
~~~~

To hear the above type `C-cC-e` in EMACS, or in a shell type:

~~~~
hsc3-lisp < ~/sw/rsc3/help/graph/why-supercollider.scm
~~~~

There is a rather terse [tutorial](?t=hsc3-lisp&e=help/tutorial.lisp),
and [translations](?t=hsc3-lisp&e=help/jmcc.lisp) of graphs by [James
McCartney](http://audiosynth.com/autobio/emu.jpg) from the `SC2`
manual.

HSC3-LISP is `CASE-INSENSITIVE`, in EMACS you can type `C-x C-l` to
time travel.

HSC3-LISP follows the [HASKELL][hs] supercollider ([HSC3][hsc3]) rules.

HSC3-LISP is not [SCHEME][scheme].  Still, the following [RSC3][rsc3] graphs are working:

- aleatoric-quartet
- alien-meadow
- analog-bubbles
- analogue-daze
- babbling-brook
- bit-reduction
- blips 001
- bottle
- bowed-string
- ccomb
- choip
- chrdn
- cricket
- crotale
- cut-outs
- cymbalism
- data-space
- demanding-studies
- diffraction
- discretion
- doppler
- drummer
- eggcrate
- f-lets
- fm-iter
- forest-sounds
- h-chatter
- half-life
- hard-sync-sawtooth-with-lfo
- harmonic-swimming
- harmonic-tumbling
- hh-808
- implosion
- impulse-sequencer
- k-ppr
- lf-pulses
- lfo-modulation
- lg-timed
- modal-space
- modal-space-local
- moto-rev
- noise-burst-sweep
- one-line
- oscillator-cluster
- pattern-buffer (random,i-random)
- plucked-strings
- police-state
- pulsing-bottles
- reverberated-sine-percussion
- rzblp
- sample-and-hold-liquidities
- scratchy
- shepard-tones
- shifting-pulses
- slly-wlk
- snare-909
- sosc-lp (send,b-setn1)
- spe
- sprinkler
- strtchd-scrmbld
- strummable-guitar
- sweepy-noise
- synthetic-piano
- tank
- tgb (async,b-alloc-read)
- theremin
- three-cpsw
- tipnso
- tremulate
- trkl
- trmlo
- tr-out
- tsort
- what-was-i-thinking
- why-supercollider
- wial
- wind-metals
- xy-interference
- zizle

## LISP

- [hsc3.lisp](?t=hsc3-lisp&e=lisp/hsc3.lisp)
- [rhs.lisp](?t=hsc3-lisp&e=lisp/rhs.lisp)
- [rhs.syntaxlisp](?t=hsc3-lisp&e=lisp/rhs.syntax.lisp)
- [rsc3.lisp](?t=hsc3-lisp&e=lisp/rsc3.lisp)
- [scheme.lisp](?t=hsc3-lisp&e=lisp/scheme.lisp)
- [stdlib.lisp](?t=hsc3-lisp&e=lisp/stdlib.lisp)
- [ugen.lisp](?t=hsc3-lisp&e=lisp/ugen.lisp)

## HELP

- [tutorial.lisp](?t=hsc3-lisp&e=help/tutorial.lisp)
- [r5rs.lisp](?t=hsc3-lisp&e=help/r5rs.lisp)

Â© [rohan drape][rd], 2014, [gpl][gpl].

[rd]: http://rd.slavepianos.org/
[hsc3]: http://rd.slavepianos.org/?t=hsc3
[hs]: http://haskell.org/
[sc3]: http://audiosynth.com/
[gpl]: http://gnu.org/copyleft/
[emacs]: http://www.gnu.org/software/emacs/
[lisp]: http://www-formal.stanford.edu/jmc/history/lisp/lisp.html
[rsc3]: http://rd.slavepianos.org/?t=rsc3
[scheme]: http://library.readscheme.org/standards.html

[r4rs]: http://people.csail.mit.edu/jaffer/r4rs_toc.html
[r5rs]: http://www.schemers.org/Documents/Standards/R5RS/HTML/
