True #t
False #f
&& and
|| or
null null?
: cons
pair pair?
!! list-ref
. compose
== equal?
GT 'gt
LT 'lt
EQ 'eq
++ append
Nothing #f
Just id
isJust id
fromJust id
vectorRef vector-ref
rem remainder
quot quotient
mod modulo
even even?
odd odd?
head car
tail cdr
set set!
>> begin
